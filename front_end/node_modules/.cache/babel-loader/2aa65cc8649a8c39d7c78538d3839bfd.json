{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josef Peterson\\\\Projects\\\\demos\\\\defi-stake-yield-brownie\\\\front_end\\\\src\\\\components\\\\Main.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable spaced-comment */\n/// <reference types=\"react-scripts\" />\nimport { useEthers } from \"@usedapp/core\";\nimport helperConfig from \"../helper-config.json\";\nimport networkMapping from \"../chain-info/deployments/map.json\";\nimport { constants } from \"ethers\";\nimport brownieConfig from \"../brownie_config.json\";\nimport dapp from \"../dapp.png\";\nimport eth from \"../eth.png\";\nimport dai from \"../dai.png\";\nimport { YourWallet } from \"./yourWallet/YourWallet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Main = () => {\n  _s();\n\n  // Show token values from the wallet\n  // Get the address of different tokens\n  // Get the balance of the users wallet\n  // send the brownie-config to our `src` folder\n  const {\n    chainId\n  } = useEthers();\n  const networkName = chainId ? helperConfig[chainId] : \"dev\";\n  console.log(chainId);\n  console.log(networkName);\n  const dappTokenAddress = chainId ? networkMapping[String(chainId)][\"DappToken\"][0] : constants.AddressZero;\n  const wethTokenAddress = chainId ? brownieConfig[\"networks\"][networkName][\"weth_token\"] : constants.AddressZero;\n  const fauTokenAddress = chainId ? brownieConfig[\"networks\"][networkName][\"fau_token\"] : constants.AddressZero;\n  const supportedTokens = [{\n    image: dapp,\n    address: dappTokenAddress,\n    name: \"DAPP\"\n  }, {\n    image: eth,\n    address: wethTokenAddress,\n    name: \"WETH\"\n  }, {\n    image: dai,\n    address: fauTokenAddress,\n    name: \"DAI\"\n  }];\n  return /*#__PURE__*/_jsxDEV(YourWallet, {\n    supportedTokens: supportedTokens\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Main, \"+J/r3hHtDuosVBEukE1cTsA/l+8=\", false, function () {\n  return [useEthers];\n});\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/Josef Peterson/Projects/demos/defi-stake-yield-brownie/front_end/src/components/Main.tsx"],"names":["useEthers","helperConfig","networkMapping","constants","brownieConfig","dapp","eth","dai","YourWallet","Main","chainId","networkName","console","log","dappTokenAddress","String","AddressZero","wethTokenAddress","fauTokenAddress","supportedTokens","image","address","name"],"mappings":";;;AAAA;AACA;AAEA,SAASA,SAAT,QAA0B,eAA1B;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AAEA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,UAAT,QAA2B,yBAA3B;;AAQA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACtB;AAEA;AACA;AAEA;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAcV,SAAS,EAA7B;AACA,QAAMW,WAAW,GAAGD,OAAO,GAAGT,YAAY,CAACS,OAAD,CAAf,GAA2B,KAAtD;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AAEA,QAAMG,gBAAgB,GAAGJ,OAAO,GAAGR,cAAc,CAACa,MAAM,CAACL,OAAD,CAAP,CAAd,CAAgC,WAAhC,EAA6C,CAA7C,CAAH,GAAqDP,SAAS,CAACa,WAA/F;AACA,QAAMC,gBAAgB,GAAGP,OAAO,GAAGN,aAAa,CAAC,UAAD,CAAb,CAA0BO,WAA1B,EAAuC,YAAvC,CAAH,GAA0DR,SAAS,CAACa,WAApG;AACA,QAAME,eAAe,GAAGR,OAAO,GAAGN,aAAa,CAAC,UAAD,CAAb,CAA0BO,WAA1B,EAAuC,WAAvC,CAAH,GAAyDR,SAAS,CAACa,WAAlG;AAEA,QAAMG,eAA6B,GAAG,CAClC;AACIC,IAAAA,KAAK,EAAEf,IADX;AAEIgB,IAAAA,OAAO,EAAEP,gBAFb;AAGIQ,IAAAA,IAAI,EAAE;AAHV,GADkC,EAMlC;AACIF,IAAAA,KAAK,EAAEd,GADX;AAEIe,IAAAA,OAAO,EAAEJ,gBAFb;AAGIK,IAAAA,IAAI,EAAE;AAHV,GANkC,EAWlC;AACIF,IAAAA,KAAK,EAAEb,GADX;AAEIc,IAAAA,OAAO,EAAEH,eAFb;AAGII,IAAAA,IAAI,EAAE;AAHV,GAXkC,CAAtC;AAkBA,sBAAQ,QAAC,UAAD;AAAY,IAAA,eAAe,EAAEH;AAA7B;AAAA;AAAA;AAAA;AAAA,UAAR;AAEH,CAtCM;;GAAMV,I;UAQWT,S;;;KARXS,I","sourcesContent":["/* eslint-disable spaced-comment */\r\n/// <reference types=\"react-scripts\" />\r\n\r\nimport { useEthers } from \"@usedapp/core\"\r\nimport helperConfig from \"../helper-config.json\"\r\nimport networkMapping from \"../chain-info/deployments/map.json\"\r\nimport { constants } from \"ethers\"\r\nimport brownieConfig from \"../brownie_config.json\"\r\nimport { brown } from \"@material-ui/core/colors\"\r\nimport dapp from \"../dapp.png\"\r\nimport eth from \"../eth.png\"\r\nimport dai from \"../dai.png\"\r\nimport { YourWallet } from \"./yourWallet/YourWallet\"\r\n\r\nexport type Token = {\r\n    image: string\r\n    address: string\r\n    name: string\r\n}\r\n\r\nexport const Main = () => {\r\n    // Show token values from the wallet\r\n\r\n    // Get the address of different tokens\r\n    // Get the balance of the users wallet\r\n\r\n    // send the brownie-config to our `src` folder\r\n\r\n    const { chainId } = useEthers()\r\n    const networkName = chainId ? helperConfig[chainId] : \"dev\"\r\n\r\n    console.log(chainId)\r\n    console.log(networkName)\r\n\r\n    const dappTokenAddress = chainId ? networkMapping[String(chainId)][\"DappToken\"][0] : constants.AddressZero\r\n    const wethTokenAddress = chainId ? brownieConfig[\"networks\"][networkName][\"weth_token\"] : constants.AddressZero\r\n    const fauTokenAddress = chainId ? brownieConfig[\"networks\"][networkName][\"fau_token\"] : constants.AddressZero\r\n\r\n    const supportedTokens: Array<Token> = [\r\n        {\r\n            image: dapp,\r\n            address: dappTokenAddress,\r\n            name: \"DAPP\"\r\n        },\r\n        {\r\n            image: eth,\r\n            address: wethTokenAddress,\r\n            name: \"WETH\"\r\n        },\r\n        {\r\n            image: dai,\r\n            address: fauTokenAddress,\r\n            name: \"DAI\"\r\n        }\r\n    ]\r\n\r\n    return (<YourWallet supportedTokens={supportedTokens} />)\r\n\r\n}"]},"metadata":{},"sourceType":"module"}