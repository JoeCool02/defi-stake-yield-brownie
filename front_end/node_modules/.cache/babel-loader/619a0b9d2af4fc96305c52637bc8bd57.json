{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josef Peterson\\\\Projects\\\\demos\\\\defi-stake-yield-brownie\\\\front_end\\\\src\\\\components\\\\yourWallet\\\\WalletBalance.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEthers, useTokenBalance } from \"@usedapp/core\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { BalanceMsg } from \"../../components/BalanceMsg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WalletBalance = _ref => {\n  _s();\n\n  let {\n    token\n  } = _ref;\n  const {\n    image,\n    address,\n    name\n  } = token;\n  const {\n    account\n  } = useEthers();\n  const tokenBalance = useTokenBalance(address, account);\n  const formattedTokenBalance = tokenBalance ? parseFloat(formatUnits(tokenBalance, 18)) : 0;\n  return /*#__PURE__*/_jsxDEV(BalanceMsg, {\n    label: `Your un-staked ${name} balance`,\n    tokenImgSrc: image,\n    amount: formattedTokenBalance\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 13\n  }, this);\n};\n\n_s(WalletBalance, \"NqEQKrgyRTaT6/yyWoioelkAkU4=\", false, function () {\n  return [useEthers, useTokenBalance];\n});\n\n_c = WalletBalance;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletBalance\");","map":{"version":3,"sources":["C:/Users/Josef Peterson/Projects/demos/defi-stake-yield-brownie/front_end/src/components/yourWallet/WalletBalance.tsx"],"names":["useEthers","useTokenBalance","formatUnits","BalanceMsg","WalletBalance","token","image","address","name","account","tokenBalance","formattedTokenBalance","parseFloat"],"mappings":";;;AACA,SAASA,SAAT,EAAoBC,eAApB,QAA2C,eAA3C;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,UAAT,QAA2B,6BAA3B;;AAMA,OAAO,MAAMC,aAAa,GAAG,QAAmC;AAAA;;AAAA,MAAlC;AAAEC,IAAAA;AAAF,GAAkC;AAC5D,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA2BH,KAAjC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAcT,SAAS,EAA7B;AACA,QAAMU,YAAY,GAAGT,eAAe,CAACM,OAAD,EAAUE,OAAV,CAApC;AACA,QAAME,qBAA6B,GAAGD,YAAY,GAAGE,UAAU,CAACV,WAAW,CAACQ,YAAD,EAAe,EAAf,CAAZ,CAAb,GAA+C,CAAjG;AACA,sBAAQ,QAAC,UAAD;AACJ,IAAA,KAAK,EAAG,kBAAiBF,IAAK,UAD1B;AAEJ,IAAA,WAAW,EAAEF,KAFT;AAGJ,IAAA,MAAM,EAAEK;AAHJ;AAAA;AAAA;AAAA;AAAA,UAAR;AAIH,CATM;;GAAMP,a;UAEWJ,S,EACCC,e;;;KAHZG,a","sourcesContent":["import { Token } from \"../Main\"\r\nimport { useEthers, useTokenBalance } from \"@usedapp/core\"\r\nimport { formatUnits } from \"@ethersproject/units\"\r\nimport { BalanceMsg } from \"../../components/BalanceMsg\"\r\n\r\nexport interface WalletBalanceProps {\r\n    token: Token\r\n}\r\n\r\nexport const WalletBalance = ({ token }: WalletBalanceProps) => {\r\n    const { image, address, name } = token\r\n    const { account } = useEthers()\r\n    const tokenBalance = useTokenBalance(address, account)\r\n    const formattedTokenBalance: number = tokenBalance ? parseFloat(formatUnits(tokenBalance, 18)) : 0\r\n    return (<BalanceMsg\r\n        label={`Your un-staked ${name} balance`}\r\n        tokenImgSrc={image}\r\n        amount={formattedTokenBalance} />)\r\n}"]},"metadata":{},"sourceType":"module"}